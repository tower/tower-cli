/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: v0.6.27
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize, Deserializer};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Plan {
    #[serde(rename = "account_id")]
    pub account_id: String,
    #[serde(rename = "base_plan_name")]
    pub base_plan_name: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "end_at", skip_serializing_if = "Option::is_none")]
    pub end_at: Option<String>,
    #[serde(rename = "features")]
    pub features: models::Features,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "start_at")]
    pub start_at: String,
    #[serde(rename = "status")]
    pub status: String,
}

impl Plan {
    pub fn new(account_id: String, base_plan_name: String, created_at: String, features: models::Features, id: String, start_at: String, status: String) -> Plan {
        Plan {
            account_id,
            base_plan_name,
            created_at,
            end_at: None,
            features,
            id,
            start_at,
            status,
        }
    }
}

