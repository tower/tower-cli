/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: development
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Team {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "slug")]
    pub slug: String,
    #[serde(rename = "token", skip_serializing_if = "Option::is_none")]
    pub token: Option<Box<models::Token>>,
    /// The type of team, either 'personal' or 'team'.
    #[serde(rename = "type")]
    pub r#type: String,
}

impl Team {
    pub fn new(name: String, slug: String, r#type: String) -> Team {
        Team {
            name,
            slug,
            token: None,
            r#type,
        }
    }
}

