/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: v0.6.27
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize, Deserializer};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Features {
    /// Whether self-hosted runners are enabled
    #[serde(rename = "has_self_hosted_runners", skip_serializing_if = "Option::is_none")]
    pub has_self_hosted_runners: Option<bool>,
    /// The number of apps that can be created
    #[serde(rename = "num_apps", skip_serializing_if = "Option::is_none")]
    pub num_apps: Option<i64>,
    /// The number of minutes that can be used for free per month
    #[serde(rename = "num_minutes", skip_serializing_if = "Option::is_none")]
    pub num_minutes: Option<i64>,
    /// The number of schedules that can be created
    #[serde(rename = "num_schedules", skip_serializing_if = "Option::is_none")]
    pub num_schedules: Option<i64>,
    /// The number of team members that can be added
    #[serde(rename = "num_team_members", skip_serializing_if = "Option::is_none")]
    pub num_team_members: Option<i64>,
}

impl Features {
    pub fn new() -> Features {
        Features {
            has_self_hosted_runners: None,
            num_apps: None,
            num_minutes: None,
            num_schedules: None,
            num_team_members: None,
        }
    }
}

