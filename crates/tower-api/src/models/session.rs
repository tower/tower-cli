/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: v0.8.0
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */
use crate::models;
use serde::{Deserialize, Deserializer, Serialize};
use serde_with::{serde_as, DefaultOnNull};

#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Session {
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "featurebase_identity")]
    pub featurebase_identity: models::FeaturebaseIdentity,
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "teams")]
    pub teams: Vec<models::Team>,
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "token")]
    pub token: models::Token,
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "user")]
    pub user: models::User,
}

impl Session {
    pub fn new(
        featurebase_identity: models::FeaturebaseIdentity,
        teams: Vec<models::Team>,
        token: models::Token,
        user: models::User,
    ) -> Session {
        Session {
            featurebase_identity,
            teams,
            token,
            user,
        }
    }
}
