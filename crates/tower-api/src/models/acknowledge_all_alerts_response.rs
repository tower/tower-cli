/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: v0.6.27
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize, Deserializer};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AcknowledgeAllAlertsResponse {
    /// A URL to the JSON Schema for this object.
    #[serde(rename = "$schema", skip_serializing_if = "Option::is_none")]
    pub schema: Option<String>,
    /// Number of alerts that were acknowledged
    #[serde(rename = "count")]
    pub count: i64,
    #[serde(rename = "status")]
    pub status: String,
}

impl AcknowledgeAllAlertsResponse {
    pub fn new(count: i64, status: String) -> AcknowledgeAllAlertsResponse {
        AcknowledgeAllAlertsResponse {
            schema: None,
            count,
            status,
        }
    }
}

