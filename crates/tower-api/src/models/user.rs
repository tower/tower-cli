/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: development
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct User {
    #[serde(rename = "company")]
    pub company: String,
    #[serde(rename = "country")]
    pub country: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "first_name")]
    pub first_name: String,
    #[serde(rename = "is_invitation_claimed")]
    pub is_invitation_claimed: bool,
    #[serde(rename = "last_name")]
    pub last_name: String,
    #[serde(rename = "profile_photo_url")]
    pub profile_photo_url: String,
}

impl User {
    pub fn new(company: String, country: String, created_at: String, email: String, first_name: String, is_invitation_claimed: bool, last_name: String, profile_photo_url: String) -> User {
        User {
            company,
            country,
            created_at,
            email,
            first_name,
            is_invitation_claimed,
            last_name,
            profile_photo_url,
        }
    }
}

