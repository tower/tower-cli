/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: v0.8.0
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */
use crate::models;
use serde::{Deserialize, Deserializer, Serialize};
use serde_with::{serde_as, DefaultOnNull};

#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExportCatalogsResponse {
    /// A URL to the JSON Schema for this object.
    #[serde(rename = "$schema", skip_serializing_if = "Option::is_none")]
    pub schema: Option<String>,
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "catalogs")]
    pub catalogs: Vec<models::ExportedCatalog>,
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "pages")]
    pub pages: models::Pagination,
}

impl ExportCatalogsResponse {
    pub fn new(
        catalogs: Vec<models::ExportedCatalog>,
        pages: models::Pagination,
    ) -> ExportCatalogsResponse {
        ExportCatalogsResponse {
            schema: None,
            catalogs,
            pages,
        }
    }
}
