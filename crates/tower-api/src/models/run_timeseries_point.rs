/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: v0.6.27
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize, Deserializer};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RunTimeseriesPoint {
    #[serde(rename = "cancelled")]
    pub cancelled: i64,
    #[serde(rename = "crashed")]
    pub crashed: i64,
    #[serde(rename = "errored")]
    pub errored: i64,
    #[serde(rename = "exited")]
    pub exited: i64,
    #[serde(rename = "pending")]
    pub pending: i64,
    /// The period of the timeseries point, typically the start of the period.
    #[serde(rename = "period")]
    pub period: String,
    #[serde(rename = "running")]
    pub running: i64,
    #[serde(rename = "scheduled")]
    pub scheduled: i64,
}

impl RunTimeseriesPoint {
    pub fn new(cancelled: i64, crashed: i64, errored: i64, exited: i64, pending: i64, period: String, running: i64, scheduled: i64) -> RunTimeseriesPoint {
        RunTimeseriesPoint {
            cancelled,
            crashed,
            errored,
            exited,
            pending,
            period,
            running,
            scheduled,
        }
    }
}

