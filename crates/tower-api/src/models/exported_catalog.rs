/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: v0.5.12
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExportedCatalog {
    #[serde(rename = "CreatedAt")]
    pub created_at: String,
    #[serde(rename = "environment")]
    pub environment: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "properties")]
    pub properties: Vec<models::ExportedCatalogProperty>,
    #[serde(rename = "slug")]
    pub slug: String,
    #[serde(rename = "type")]
    pub r#type: String,
}

impl ExportedCatalog {
    pub fn new(created_at: String, environment: String, name: String, properties: Vec<models::ExportedCatalogProperty>, slug: String, r#type: String) -> ExportedCatalog {
        ExportedCatalog {
            created_at,
            environment,
            name,
            properties,
            slug,
            r#type,
        }
    }
}

