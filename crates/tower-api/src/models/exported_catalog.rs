/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: v0.8.0
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */
use crate::models;
use serde::{Deserialize, Deserializer, Serialize};
use serde_with::{serde_as, DefaultOnNull};

#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExportedCatalog {
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "CreatedAt")]
    pub created_at: String,
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "environment")]
    pub environment: String,
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "name")]
    pub name: String,
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "properties")]
    pub properties: Vec<models::ExportedCatalogProperty>,
    /// This property is deprecated. Please use name instead.
    #[serde(rename = "slug", skip_serializing_if = "Option::is_none")]
    pub slug: Option<String>,
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "type")]
    pub r#type: String,
}

impl ExportedCatalog {
    pub fn new(
        created_at: String,
        environment: String,
        name: String,
        properties: Vec<models::ExportedCatalogProperty>,
        r#type: String,
    ) -> ExportedCatalog {
        ExportedCatalog {
            created_at,
            environment,
            name,
            properties,
            slug: None,
            r#type,
        }
    }
}
