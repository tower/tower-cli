/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: v0.8.0
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */
use crate::models;
use serde::{Deserialize, Deserializer, Serialize};
use serde_with::{serde_as, DefaultOnNull};

#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeleteTeamInvitationResponse {
    /// A URL to the JSON Schema for this object.
    #[serde(rename = "$schema", skip_serializing_if = "Option::is_none")]
    pub schema: Option<String>,
    /// The team invitation that was just removed
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "invitation")]
    pub invitation: models::TeamInvitation,
}

impl DeleteTeamInvitationResponse {
    pub fn new(invitation: models::TeamInvitation) -> DeleteTeamInvitationResponse {
        DeleteTeamInvitationResponse {
            schema: None,
            invitation,
        }
    }
}
