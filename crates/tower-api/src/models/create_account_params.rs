/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: development
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateAccountParams {
    /// A URL to the JSON Schema for this object.
    #[serde(rename = "$schema", skip_serializing_if = "Option::is_none")]
    pub schema: Option<String>,
    #[serde(rename = "company")]
    pub company: String,
    #[serde(rename = "country")]
    pub country: String,
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "first_name")]
    pub first_name: String,
    #[serde(rename = "invite")]
    pub invite: String,
    #[serde(rename = "last_name")]
    pub last_name: String,
    #[serde(rename = "password")]
    pub password: String,
}

impl CreateAccountParams {
    pub fn new(company: String, country: String, email: String, first_name: String, invite: String, last_name: String, password: String) -> CreateAccountParams {
        CreateAccountParams {
            schema: None,
            company,
            country,
            email,
            first_name,
            invite,
            last_name,
            password,
        }
    }
}

