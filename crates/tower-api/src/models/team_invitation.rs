/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: v0.8.0
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */
use crate::models;
use serde::{Deserialize, Deserializer, Serialize};
use serde_with::{serde_as, DefaultOnNull};

#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TeamInvitation {
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "email")]
    pub email: String,
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "invitation_sent_at")]
    pub invitation_sent_at: String,
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "team")]
    pub team: models::Team,
}

impl TeamInvitation {
    pub fn new(email: String, invitation_sent_at: String, team: models::Team) -> TeamInvitation {
        TeamInvitation {
            email,
            invitation_sent_at,
            team,
        }
    }
}
