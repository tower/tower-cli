/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: v0.8.0
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */
use crate::models;
use serde::{Deserialize, Deserializer, Serialize};
use serde_with::{serde_as, DefaultOnNull};

#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdatePlanParams {
    /// A URL to the JSON Schema for this object.
    #[serde(rename = "$schema", skip_serializing_if = "Option::is_none")]
    pub schema: Option<String>,
    /// The name of the base plan to use.
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "base_plan_name")]
    pub base_plan_name: String,
    /// Optional expiration date for the plan.
    #[serde(rename = "end_at", skip_serializing_if = "Option::is_none")]
    pub end_at: Option<String>,
}

impl UpdatePlanParams {
    pub fn new(base_plan_name: String) -> UpdatePlanParams {
        UpdatePlanParams {
            schema: None,
            base_plan_name,
            end_at: None,
        }
    }
}
