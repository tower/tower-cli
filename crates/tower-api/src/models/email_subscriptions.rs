/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: v0.8.0
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */
use crate::models;
use serde::{Deserialize, Deserializer, Serialize};
use serde_with::{serde_as, DefaultOnNull};

#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EmailSubscriptions {
    #[serde(rename = "feature_updates", skip_serializing_if = "Option::is_none")]
    pub feature_updates: Option<bool>,
    #[serde(rename = "marketing_emails", skip_serializing_if = "Option::is_none")]
    pub marketing_emails: Option<bool>,
    #[serde(rename = "tower_newsletter", skip_serializing_if = "Option::is_none")]
    pub tower_newsletter: Option<bool>,
}

impl EmailSubscriptions {
    pub fn new() -> EmailSubscriptions {
        EmailSubscriptions {
            feature_updates: None,
            marketing_emails: None,
            tower_newsletter: None,
        }
    }
}
