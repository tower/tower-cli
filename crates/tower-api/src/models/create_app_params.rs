/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: v0.7.10
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize, Deserializer};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateAppParams {
    /// A URL to the JSON Schema for this object.
    #[serde(rename = "$schema", skip_serializing_if = "Option::is_none")]
    pub schema: Option<String>,
    /// Indicates that web traffic should be routed to this app and that its runs should get a hostname assigned to it.
    #[serde(rename = "is_externally_accessible", skip_serializing_if = "Option::is_none")]
    pub is_externally_accessible: Option<bool>,
    /// The name of the app.
    #[serde(rename = "name")]
    pub name: String,
    /// A description of the app.
    #[serde(rename = "short_description", skip_serializing_if = "Option::is_none")]
    pub short_description: Option<String>,
    /// The slug of the app. Legacy CLI will send it but we don't need it.
    #[serde(rename = "slug", skip_serializing_if = "Option::is_none")]
    pub slug: Option<String>,
}

impl CreateAppParams {
    pub fn new(name: String) -> CreateAppParams {
        CreateAppParams {
            schema: None,
            is_externally_accessible: None,
            name,
            short_description: None,
            slug: None,
        }
    }
}

