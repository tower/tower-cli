/*
 * Tower API
 *
 * REST API to interact with Tower Services.
 *
 * The version of the OpenAPI document: v0.8.0
 * Contact: hello@tower.dev
 * Generated by: https://openapi-generator.tech
 */
use crate::models;
use serde::{Deserialize, Deserializer, Serialize};
use serde_with::{serde_as, DefaultOnNull};

#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RunFailureAlert {
    /// App that the failed Run belongs to
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "app")]
    pub app: models::App,
    /// Run that failed
    #[serde_as(as = "DefaultOnNull")]
    #[serde(rename = "run")]
    pub run: models::Run,
}

impl RunFailureAlert {
    pub fn new(app: models::App, run: models::Run) -> RunFailureAlert {
        RunFailureAlert { app, run }
    }
}
